import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { AmplifySignOut } from "@aws-amplify/ui-react";
import { API, graphqlOperation, Storage } from "aws-amplify";
import { listSongs } from "../src/graphql/queries";
import { updateSong } from "../src/graphql/mutations";
import { useEffect, useState } from "react";
import ReactPlayer from "react-player";

export default function Home() {
  const [songs, setSongs] = useState([]);
  const [songPlaying, setSongPlaying] = useState(null);
  const [audioURL, setAudioURL] = useState("");

  const fetchSongs = async () => {
    try {
      const songData = await API.graphql(graphqlOperation(listSongs));
      const songList = songData.data.listSongs.items;
      console.log("song", songList);
      setSongs(songList);
    } catch (err) {
      console.log("error fetching songs", err);
    }
  };

  useEffect(() => {
    fetchSongs();
  }, []);

  const addLike = async (idx) => {
    try {
      const song = songs[idx];
      song.like++;
      delete song.createdAt;
      delete song.updatedAt;
      const songData = await API.graphql(
        graphqlOperation(updateSong, { input: song })
      );

      const songList = [...songs];
      songList[idx] = songData.data.updateSong;
      setSongs(songList);
    } catch (err) {
      console.log("error adding like", err);
    }
  };

  const toggleSong = async (idx) => {
    if (songPlaying === idx) {
      setSongPlaying(null);
    } else {
      const songFilePath = songs[idx].filePath;
      try {
        const fileAccessURL = await Storage.get(songFilePath, { expires: 60 });
        console.log("access URL", fileAccessURL);
        setSongPlaying(idx);
        setAudioURL(fileAccessURL);
      } catch (err) {
        console.log("error accessing the file from s3", err);
        setAudioURL("");
        setSongPlaying(null);
      }
    }
  };

  console.log(songPlaying);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AmplifySignOut />
      <h2>My App Content</h2>
      {songs.map((song, idx) => (
        <div key={song.id + song.title}>
          <p>title: {song.title}</p>
          <p>owner: {song.owner}</p>
          <p>likes: {song.like}</p>
          <p>description: {song.description}</p>
          <p onClick={() => toggleSong(idx)}>
            {songPlaying === idx ? "Pasue" : "Play"}
          </p>
          <p onClick={() => addLike(idx)}>Like</p>
          {songPlaying === idx && (
            <ReactPlayer
              url={audioURL}
              controls
              playing
              height="50px"
              onPause={() => toggleSong(idx)}
            />
          )}
        </div>
      ))}
    </div>
  );
}
